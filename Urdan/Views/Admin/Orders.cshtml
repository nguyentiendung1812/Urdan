@model X.PagedList.IPagedList<Order>;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@{
	ViewBag.Title = "Orders";
}


<div class="container pt-4">
  <h1>@ViewBag.Title</h1>
  <form asp-action="Orders" method="get">
    <div class="form-group">
      <label for="search">
        Find by Id:
      </label>
      <input type="text" name="search" id="search" class="form-control" value="@ViewBag.Search" style="width: auto;display: inline-block;" />
      <input type="submit" value="Search" class="btn btn-dark" /> |
      <a asp-action="Orders" asp-route-page="@ViewBag.Page">Clear</a>
    </div>
  </form>
  <hr />
  <div class="row">
    <div class="col">
      <table class="table table-responsive table-light table-hover">
        <thead>
          <tr>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().Id)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().Status)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().PaymentMethod)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().ShippingFee)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().Total)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().User)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().ShippingAddress)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().DeliveryDate)
            </th>
            <th scope="col">
              @Html.DisplayNameFor(model => model.First().CreatedAt)
            </th>
            <th scope="col">
              Action
            </th>
          </tr>


        </thead>
        <tbody>
          @foreach (var item in Model)
          {
            <tr>
              <td>@item.Id</td>
              <td>@item.Status</td>
              <td>@item.PaymentMethod</td>
              <td>$@item.ShippingFee</td>
              <td>
                $@item.Total
              </td>
              <td>@item.User?.Username</td>
              <td>@item.ShippingAddress?.Detail, @item.ShippingAddress?.Ward, @item.ShippingAddress?.District, @item.ShippingAddress?.City</td>
              <td>@Html.DisplayFor(model => item.DeliveryDate)</td>
              <td>@item.CreatedAt</td>
              <td>
                <div class="d-flex">
                  <a asp-action="DetailsOrder" asp-route-id="@item.Id" class="btn btn-success me-3">Details</a>
                  <a asp-action="EditOrder" asp-route-id="@item.Id" class="btn btn-warning me-3">Edit</a>

                  <button type="button" onclick="handleDeleteOrder(@item.Id)" id="@item.Id" class="btn btn-danger">
                    Delete
                  </button>
                </div>
              </td>
            </tr>
          }
        </tbody>
      </table>
    </div>

  </div>
  @Html.PagedListPager(Model, page => Url.Action("Orders", new { page, search = ViewBag.Search }), new PagedListRenderOptions()
  {
  LiElementClasses = new List<string> { "page-item" },
  PageClasses = new List<String> { "page-link" },
  })
</div>